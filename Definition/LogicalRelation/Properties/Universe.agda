{-# OPTIONS --without-K  #-}

open import Definition.Typed.EqualityRelation

module Definition.LogicalRelation.Properties.Universe {{eqrel : EqRelSet}} where
open EqRelSet {{...}}

open import Definition.Untyped
open import Definition.Typed
open import Definition.LogicalRelation
open import Definition.LogicalRelation.ShapeView
open import Definition.LogicalRelation.Irrelevance


-- Helper function for reducible terms of type U for specific type derivations.
univEq‚Ä≤ : ‚àÄ {l Œì A s} ([U] : Œì ‚ä©‚ü® l ‚ü©U s) ‚Üí Œì ‚ä©‚ü® l ‚ü© A ‚à∑ Univ s ‚¶Ç ùï•y / U-intr [U] ‚Üí Œì ‚ä©‚ü® ‚Å∞ ‚ü© A ‚¶Ç s
univEq‚Ä≤ (noemb (U·µ£ .‚Å∞ 0<1 ‚ä¢Œì)) (U‚Çú A‚ÇÅ d typeA A‚â°A [A]) = [A]
univEq‚Ä≤ (emb 0<1 x) [A] = univEq‚Ä≤ x [A]

-- Reducible terms of type U are reducible types.
univEq : ‚àÄ {l Œì A s} ([U] : Œì ‚ä©‚ü® l ‚ü© Univ s ‚¶Ç ùï•y) ‚Üí Œì ‚ä©‚ü® l ‚ü© A ‚à∑ Univ s ‚¶Ç ùï•y / [U] ‚Üí Œì ‚ä©‚ü® ‚Å∞ ‚ü© A ‚¶Ç s
univEq [U] [A] = univEq‚Ä≤ (U-elim [U])
                         (irrelevanceTerm [U] (U-intr (U-elim [U])) [A])

-- Helper function for reducible term equality of type U for specific type derivations.
univEqEq‚Ä≤ : ‚àÄ {l l‚Ä≤ Œì A B s} ([U] : Œì ‚ä©‚ü® l ‚ü©U s) ([A] : Œì ‚ä©‚ü® l‚Ä≤ ‚ü© A ‚¶Ç s)
         ‚Üí Œì ‚ä©‚ü® l ‚ü© A ‚â° B ‚à∑ Univ s ‚¶Ç ùï•y / U-intr [U]
         ‚Üí Œì ‚ä©‚ü® l‚Ä≤ ‚ü© A ‚â° B  ‚¶Ç s / [A]
univEqEq‚Ä≤ (noemb (U·µ£ .‚Å∞ 0<1 ‚ä¢Œì)) [A]
          (U‚Çú‚Çå A‚ÇÅ B‚ÇÅ d d‚Ä≤ typeA typeB A‚â°B [t] [u] [t‚â°u]) =
  irrelevanceEq [t] [A] [t‚â°u]
univEqEq‚Ä≤ (emb 0<1 x) [A] [A‚â°B] = univEqEq‚Ä≤ x [A] [A‚â°B]

-- Reducible term equality of type U is reducible type equality.
univEqEq : ‚àÄ {l l‚Ä≤ Œì A B s} ([U] : Œì ‚ä©‚ü® l ‚ü© Univ s ‚¶Ç ùï•y) ([A] : Œì ‚ä©‚ü® l‚Ä≤ ‚ü© A ‚¶Ç s)
         ‚Üí Œì ‚ä©‚ü® l ‚ü© A ‚â° B ‚à∑ Univ s ‚¶Ç ùï•y / [U]
         ‚Üí Œì ‚ä©‚ü® l‚Ä≤ ‚ü© A ‚â° B ‚¶Ç s / [A]
univEqEq [U] [A] [A‚â°B] =
  let [A‚â°B]‚Ä≤ = irrelevanceEqTerm [U] (U-intr (U-elim [U])) [A‚â°B]
  in  univEqEq‚Ä≤ (U-elim [U]) [A] [A‚â°B]‚Ä≤
